definitions:
  dto.LoginResponse:
    properties:
      access:
        type: string
    type: object
  dto.PostRequest:
    properties:
      body:
        type: string
      title:
        type: string
    required:
    - body
    - title
    type: object
  dto.RegisterResponse:
    properties:
      email:
        type: string
      username:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      message: {}
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login as user to application
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
      summary: Login a User
      tags:
      - auth
  /posts:
    get:
      consumes:
      - application/json
      description: get list several posts
      produces:
      - application/json
      responses: {}
      summary: List several posts
      tags:
      - post
    post:
      consumes:
      - application/json
      description: Create a post
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PostRequest'
      produces:
      - application/json
      responses: {}
      summary: Create a post
      tags:
      - post
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: perform delete a post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      responses: {}
      summary: Delete a post
      tags:
      - post
    get:
      consumes:
      - application/json
      description: get detail a post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Detail a post
      tags:
      - post
    patch:
      consumes:
      - application/json
      description: Update a post
      parameters:
      - description: Post
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PostRequest'
      produces:
      - application/json
      responses: {}
      summary: Update a post
      tags:
      - post
  /register:
    post:
      consumes:
      - application/json
      description: register a new user
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.RegisterResponse'
              type: object
      summary: Register a new User
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: get list several users
      produces:
      - application/json
      responses: {}
      summary: List several users
      tags:
      - user
  /users/{username}:
    delete:
      consumes:
      - application/json
      description: perform delete a user by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a User
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get a user by username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get a User
      tags:
      - user
swagger: "2.0"
